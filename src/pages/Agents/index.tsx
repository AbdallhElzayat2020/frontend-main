import axios from "axios";
import Breadcrumb from "../../components/Breadcrumb";
import { useEffect, useState } from "react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "../../components/ui/dialog";
import {
  Select,
  SelectContent,
  SelectTrigger,
} from "../../components/ui/select";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "../../components/ui/table";
import { useNavigate } from "react-router-dom";

const AGENTS = [
  {
    name: "Windows",
    logo: (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1 3.66016L8.17188 2.67188V9.60156H1V3.66016ZM1 16.3398L8.17188 17.3281V10.4844H1V16.3398ZM8.96094 17.4336L18.5 18.75V10.4844H8.96094V17.4336ZM8.96094 2.56641V9.60156H18.5V1.25L8.96094 2.56641Z"
          fill="#718096"
        />
      </svg>
    ),
    disabled: false,
  },
  {
    name: "Mac",
    logo: (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M15.293 10.4961C15.2852 9.0625 15.9336 7.98047 17.2461 7.18359C16.5117 6.13281 15.4023 5.55469 13.9375 5.44141C12.5508 5.33203 11.0352 6.25 10.4805 6.25C9.89453 6.25 8.55078 5.48047 7.49609 5.48047C5.31641 5.51562 3 7.21875 3 10.6836C3 11.707 3.1875 12.7643 3.5625 13.8555C4.0625 15.2891 5.86719 18.8047 7.75 18.7461C8.73437 18.7227 9.42969 18.0469 10.7109 18.0469C11.9531 18.0469 12.5977 18.7461 13.6953 18.7461C15.5937 18.7188 17.2266 15.5234 17.7031 14.0859C15.1562 12.8867 15.293 10.5703 15.293 10.4961ZM13.082 4.08203C14.1484 2.81641 14.0508 1.66406 14.0195 1.25C13.0781 1.30469 11.9883 1.89063 11.3672 2.61328C10.6836 3.38672 10.2812 4.34375 10.3672 5.42188C11.3867 5.5 12.3164 4.97656 13.082 4.08203Z"
          fill="#718096"
        />
      </svg>
    ),
    disabled: true,
  },
  {
    name: "Linux",
    logo: (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M17.5511 16.0583C16.9646 15.8181 16.7137 15.4994 16.738 15.0238C16.7629 14.4686 16.448 14.062 16.2984 13.9013C16.3888 13.5562 16.6528 12.3621 16.2987 11.3249C15.9181 10.2147 14.7561 8.51914 13.5571 6.85244C13.0663 6.16798 13.0431 5.42397 13.0163 4.56246C12.9906 3.74075 12.9616 2.80933 12.5034 1.77391C12.0051 0.646496 11.0054 0 9.76033 0C9.01967 0 8.2594 0.231477 7.67435 0.635021C6.47631 1.46185 6.63467 3.26455 6.73946 4.45741C6.75382 4.62075 6.76733 4.77505 6.7752 4.90679C6.84497 6.07506 6.78149 6.6908 6.69847 6.87795C6.64477 7.00024 6.38037 7.34831 6.10057 7.71684C5.81119 8.09796 5.48312 8.52996 5.2142 8.93252C4.89335 9.41691 4.63433 10.1573 4.38384 10.8733C4.20056 11.3973 4.02744 11.8921 3.85891 12.1879C3.5395 12.7568 3.61898 13.2873 3.68534 13.5325C3.56442 13.6165 3.38973 13.7819 3.24225 14.0936C3.06402 14.4739 2.70238 14.6783 1.95038 14.8229C1.6048 14.8936 1.3665 15.0389 1.24191 15.2548C1.0606 15.569 1.15936 15.9637 1.24945 16.2335C1.38257 16.6301 1.29962 16.8811 1.1488 17.3368C1.11404 17.442 1.07463 17.5611 1.0347 17.6924C0.971813 17.8997 0.994502 18.0882 1.10198 18.2526C1.38598 18.6867 2.21471 18.8399 3.06783 18.9406C3.57721 19.001 4.13472 19.2048 4.67394 19.4019C5.20227 19.595 5.74857 19.7946 6.24516 19.8552C6.32064 19.8647 6.39539 19.8695 6.46746 19.8695C7.21723 19.8695 7.55599 19.372 7.6634 19.1676C7.93271 19.1126 8.86157 18.9367 9.81889 18.913C10.7747 18.8858 11.6995 19.0745 11.9615 19.1332C12.0438 19.2908 12.2609 19.6509 12.607 19.8364C12.7973 19.9404 13.062 20 13.3331 20H13.3332C13.6228 20 14.1737 19.9315 14.6097 19.4729C15.0446 19.012 16.1311 18.4237 16.9246 17.9941C17.1016 17.8982 17.2673 17.8085 17.4125 17.7275C17.8582 17.4804 18.1014 17.1274 18.0797 16.7589C18.0616 16.4529 17.8591 16.1844 17.5511 16.0583ZM7.68412 15.9696C7.62864 15.5788 7.12589 15.1912 6.54365 14.7424C6.06758 14.3754 5.52797 13.9594 5.37932 13.6072C5.0721 12.8805 5.31427 11.6027 5.7365 10.9447C5.94516 10.6153 6.11558 10.1157 6.28044 9.63252C6.45841 9.11082 6.64247 8.5714 6.84831 8.33527C7.17428 7.96661 7.47553 7.24929 7.52891 6.68398C7.83415 6.97539 8.30767 7.34516 8.74511 7.34516C8.81246 7.34516 8.87783 7.33638 8.94032 7.31874C9.2396 7.23231 9.67981 6.97795 10.1055 6.73204C10.4725 6.51998 10.9251 6.25847 11.0954 6.23466C11.3874 6.65395 13.0842 10.4088 13.2575 11.6146C13.3947 12.5687 13.2498 13.3575 13.1769 13.6664C13.1183 13.6584 13.0484 13.6519 12.975 13.6519C12.5024 13.6519 12.3773 13.9099 12.3447 14.0639C12.2609 14.4641 12.252 15.7438 12.2511 16.0313C12.0802 16.2484 11.216 17.2709 9.97528 17.4547C9.4699 17.5281 8.99796 17.5654 8.57265 17.5654C8.20911 17.5654 7.97711 17.5373 7.88078 17.5227L7.2573 16.8093C7.50314 16.6879 7.74891 16.4318 7.68412 15.9696ZM8.47527 4.20652C8.4558 4.21491 8.43665 4.2239 8.41783 4.23347C8.41593 4.19124 8.41153 4.14842 8.40478 4.10547C8.33671 3.71366 8.07691 3.42927 7.78714 3.42927C7.76569 3.42927 7.74412 3.43091 7.72045 3.43451C7.54805 3.46324 7.41284 3.59275 7.33874 3.77635C7.40372 3.37347 7.63199 3.07517 7.90281 3.07517C8.22084 3.07517 8.4895 3.50376 8.4895 4.01104C8.4895 4.07498 8.48485 4.13859 8.47527 4.20652ZM10.9465 4.50862C10.9756 4.4159 10.9914 4.31557 10.9914 4.21144C10.9914 3.7515 10.6995 3.39117 10.327 3.39117C9.96295 3.39117 9.66676 3.75911 9.66676 4.21144C9.66676 4.24226 9.66826 4.27314 9.67115 4.30396C9.65187 4.29655 9.63305 4.28934 9.61469 4.28239C9.57279 4.1555 9.55161 4.02311 9.55161 3.88796C9.55161 3.33799 9.90308 2.89051 10.3352 2.89051C10.7673 2.89051 11.1188 3.33799 11.1188 3.88796C11.1188 4.11675 11.0557 4.33511 10.9465 4.50862ZM10.6279 5.57905C10.6216 5.60686 10.6084 5.61918 10.4619 5.69538C10.3879 5.73387 10.2959 5.78181 10.1807 5.85197L10.1037 5.8986C9.7943 6.08614 9.0699 6.52542 8.87324 6.55119C8.73967 6.56916 8.65704 6.51735 8.47127 6.39112C8.42937 6.3626 8.38478 6.3323 8.33724 6.30181C8.00235 6.08207 7.78694 5.84004 7.76261 5.74542C7.87179 5.66102 8.14242 5.44981 8.28098 5.32476C8.56222 5.06325 8.84524 4.88751 8.98531 4.88751C8.99272 4.88751 8.99941 4.88803 9.00636 4.88934C9.17095 4.91839 9.57692 5.08043 9.87345 5.19872C10.0105 5.25341 10.1289 5.30063 10.2121 5.33053C10.4745 5.42063 10.6113 5.53591 10.6279 5.57905ZM12.9851 17.8001C13.1331 17.1325 13.3036 16.2243 13.276 15.6889C13.2696 15.5673 13.2588 15.4349 13.2484 15.3069C13.2289 15.0675 13.2 14.7118 13.2299 14.6063C13.2358 14.6035 13.2423 14.6011 13.2496 14.5991C13.2508 14.9052 13.3173 15.5158 13.8056 15.7287C13.9511 15.7922 14.1174 15.8243 14.2998 15.8243C14.789 15.8243 15.3316 15.5844 15.5539 15.3621C15.6848 15.2312 15.7949 15.0711 15.872 14.9442C15.8889 14.9936 15.8993 15.0581 15.8938 15.1413C15.8648 15.5928 16.0842 16.1917 16.5018 16.4124L16.5625 16.4444C16.7113 16.5224 17.1063 16.7298 17.1126 16.8282C17.1126 16.8282 17.1093 16.8398 17.0873 16.8602C16.9883 16.9507 16.64 17.1285 16.3033 17.3005C15.7058 17.6056 15.0286 17.9513 14.7245 18.2712C14.2963 18.7218 13.812 19.0245 13.5195 19.0245C13.4843 19.0245 13.4522 19.0201 13.4237 19.011C13.1061 18.912 12.8446 18.4537 12.9851 17.8001ZM2.15805 16.097C2.12566 15.9454 2.10008 15.8257 2.12756 15.7097C2.14749 15.6238 2.57156 15.5318 2.75268 15.4925C3.0073 15.4372 3.27065 15.3801 3.44285 15.2756C3.6757 15.1345 3.8018 14.8744 3.91301 14.6449C3.99354 14.4789 4.07669 14.3073 4.17564 14.251C4.18121 14.2477 4.18974 14.2439 4.206 14.2439C4.39138 14.2439 4.78036 14.6336 5.0045 14.9824C5.06135 15.0703 5.16666 15.2465 5.2885 15.4505C5.65289 16.0602 6.15185 16.8953 6.41244 17.1752C6.64726 17.4268 7.02739 17.9105 6.93389 18.3254C6.86543 18.6473 6.50096 18.9091 6.415 18.967C6.38378 18.9741 6.34516 18.9777 6.29972 18.9777C5.80096 18.9777 4.81367 18.5627 4.28324 18.3398L4.20475 18.3068C3.90855 18.1826 3.42501 18.1044 2.9574 18.0287C2.58533 17.9684 2.07582 17.886 1.99136 17.8115C1.9229 17.7347 2.00231 17.4851 2.07234 17.2648C2.12277 17.1065 2.17484 16.9429 2.20336 16.7715C2.24382 16.4982 2.19621 16.2757 2.15805 16.097Z"
          fill="#718096"
        />
      </svg>
    ),
    disabled: true,
  },
];

const WINDOWS_AGENTS = [
  {
    name: "Installable",
  },
  {
    name: "Portable",
  },
  {
    name: "Dll",
  },
];

export default function Agents() {
  const navigate = useNavigate();
  const [modal, setModal] = useState(false);
  const [agents, setAgents] = useState<any[]>([]);
  const [selectedAgent, selectAgent] = useState<any>();

  useEffect(() => {
    axios.get("/agents").then((res) => {
      setAgents(res.data);
    });
  }, []);
  return (
    <div>
      <Breadcrumb
        pageName="Agents"
        buttons={
          <div>
            <Select>
              <SelectTrigger className="border-none !bg-none p-0">
                <button className="flex items-center gap-2 rounded bg-primary px-4.5 py-2 font-medium text-white hover:bg-opacity-80">
                  Generate
                </button>
              </SelectTrigger>
              <SelectContent className="w-[200px] py-2">
                {AGENTS.map((agent: any) => {
                  return (
                    <button
                      disabled={agent.disabled}
                      onClick={() => setModal(true)}
                      className={`animate flex w-full items-center justify-start px-2 duration-200 hover:bg-gray-100 ${
                        agent.disabled ? "cursor-not-allowed !opacity-45" : ""
                      }`}
                    >
                      <div className="flex flex-row-reverse gap-2 px-2 py-2 font-medium text-gray-500">
                        <span>{agent.name}</span>
                        {agent.logo}
                      </div>{" "}
                    </button>
                  );
                })}
              </SelectContent>
            </Select>
          </div>
        }
      />

      <Dialog open={modal} onOpenChange={setModal}>
        <DialogContent>
          <DialogHeader>
            <DialogTitle>Select Agent</DialogTitle>
          </DialogHeader>
          <div className="flex flex-col gap-1">
            {WINDOWS_AGENTS.map((agent: any) => {
              return (
                <div
                  className={`animate flex w-full flex-row-reverse items-center justify-between border-s-[2px] border-s-primary bg-primary/10 py-2 pe-2 ps-6`}
                >
                  <button className="inline-flex items-center gap-2 px-3 py-2 font-medium text-primary">
                    <svg
                      width="11"
                      height="14"
                      viewBox="0 0 11 14"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g clip-path="url(#clip0_1560_11978)">
                        <path
                          d="M9.84375 11.7879H0.65625C0.293945 11.7879 0 12.0821 0 12.4447C0 12.8297 0.293945 13.125 0.65625 13.125H9.84375C10.2061 13.125 10.5 12.8308 10.5 12.4682C10.5 12.1051 10.2074 11.7879 9.84375 11.7879ZM8.27148 5.6793L5.90625 8.19492V1.53398C5.90625 1.16922 5.61367 0.875 5.25 0.875C4.88633 0.875 4.59375 1.16922 4.59375 1.5318V8.19273L2.2277 5.6793C2.09863 5.53984 1.92445 5.47148 1.75 5.47148C1.58851 5.47148 1.42707 5.53049 1.30047 5.6502C1.03644 5.89818 1.02375 6.31384 1.27228 6.57798L4.77228 10.2995C5.02007 10.5645 5.47993 10.5645 5.72767 10.2995L9.22767 6.57798C9.47633 6.31375 9.46351 5.89821 9.19948 5.6502C8.93594 5.40039 8.52031 5.38945 8.27148 5.6793Z"
                          fill="#743A8E"
                        />
                      </g>
                      <defs>
                        <clipPath id="clip0_1560_11978">
                          <rect width="10.5" height="14" fill="white" />
                        </clipPath>
                      </defs>
                    </svg>
                    Download
                  </button>
                  <div className="flex flex-row-reverse gap-2 font-medium text-primary">
                    <span>{agent.name}</span>
                    <svg
                      width="22"
                      height="24"
                      viewBox="0 0 22 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g clip-path="url(#clip0_1034_10057)">
                        <path
                          d="M0.75 4.39219L9.35625 3.20625V11.5219H0.75V4.39219ZM0.75 19.6078L9.35625 20.7938V12.5812H0.75V19.6078ZM10.3031 20.9203L21.75 22.5V12.5812H10.3031V20.9203ZM10.3031 3.07969V11.5219H21.75V1.5L10.3031 3.07969Z"
                          fill="#743A8E"
                        />
                      </g>
                      <defs>
                        <clipPath id="clip0_1034_10057">
                          <rect
                            width="21"
                            height="24"
                            fill="white"
                            transform="translate(0.75)"
                          />
                        </clipPath>
                      </defs>
                    </svg>
                  </div>{" "}
                </div>
              );
            })}
          </div>
        </DialogContent>
      </Dialog>
      <div>
        <div className="relative overflow-x-auto">
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>HOSTNAME</TableHead>
                <TableHead>Domain\User</TableHead>
                <TableHead>PROCESS</TableHead>
                <TableHead>OS</TableHead>
                <TableHead>VERSION</TableHead>
                <TableHead>STATUS</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {agents.map((agent: any) => (
                <TableRow
                  key={agent.SessionToken}
                  onClick={() => (
                    selectAgent(agent),
                    navigate(`/agents/${agent.SessionToken}`)
                  )}
                  className={`animate w-full cursor-pointer border-b-[1px] border-gray-200 bg-white  duration-200 hover:bg-gray-100 ${
                    selectedAgent == agent
                      ? "border-primary bg-gradient-to-tl from-primary-70/20"
                      : null
                  }`}
                >
                  <TableCell className="font-medium">
                    {" "}
                    {agent.HostName}
                  </TableCell>
                  <TableCell>
                    {" "}
                    {agent.UserName}\{agent.Domain}
                  </TableCell>
                  <TableCell>
                    {" "}
                    {agent.ProcessID} ({agent.ProcessName})
                  </TableCell>
                  <TableCell>
                    {" "}
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="15"
                      height="18"
                      viewBox="0 0 15 18"
                      fill="none"
                    >
                      <g clipPath="url(#clip0_1214_4384)">
                        <path
                          d="M0 3.61113L6.09609 2.77109V8.66133H0V3.61113ZM0 14.3889L6.09609 15.2289V9.41172H0V14.3889ZM6.7668 15.3186L14.875 16.4375V9.41172H6.7668V15.3186ZM6.7668 2.68145V8.66133H14.875V1.5625L6.7668 2.68145Z"
                          fill="#743A8E"
                        />
                      </g>
                      <defs>
                        <clipPath id="clip0_1214_4384">
                          <rect
                            width="14.875"
                            height="17"
                            fill="white"
                            transform="translate(0 0.5)"
                          />
                        </clipPath>
                      </defs>
                    </svg>
                  </TableCell>
                  <TableCell> {agent.AgentVersion}</TableCell>
                  <TableCell>
                    {" "}
                    {agent.AgentStatus == "Connected" ? (
                      <span className="rounded-full bg-green-700/10 px-3 py-1 text-green-600">
                        {agent.AgentStatus}
                      </span>
                    ) : (
                      <span className="rounded-full bg-red-700/10 px-1 py-1 text-red-600">
                        {agent.AgentStatus}
                      </span>
                    )}
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>
      </div>
    </div>
  );
}
