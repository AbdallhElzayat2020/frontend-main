import axios from "axios";
import { useEffect, useState } from "react";
import Breadcrumb from "../components/Breadcrumb";

export default function Index() {
  const [data, setData] = useState<any>(null);
  useEffect(() => {
    axios.get(`/dashboard`).then((res) => {
      setData(res.data);
    });
  }, []);

  return (
    <>
      <Breadcrumb pageName="Dashboard" buttons={<div></div>} />

      <div className="flex gap-4">
        <Container>
          <Header title={`What's New (${data?.whatsNew.length})`} />
          {data?.whatsNew.map((item: any) => (
            <NewsCard
              title={item.title}
              desc={item.description}
              date={item.date}
            />
          ))}
        </Container>
        <Container>
          <Header title={`Asset Status (${data?.assetStatus.length})`} />
          {data?.assetStatus.map((item: any) => (
            <AssetStatus title={item.name} status={item.status} />
          ))}
        </Container>
      </div>
      <div className="mt-5 flex gap-4">
        <Container>
          <Header title={"Scheduled Assessments"} />
          {data?.scheduledAssessments.map((item: any) => (
            <NewsCard
              title={item.title}
              desc={`${item.contact} - ${item.scheduledTime}`}
              date={`${item.id} - ${item.agentName}`}
            />
          ))}
        </Container>
        <Container>
          <Header title={`System Health`} />
          <div className="animate group w-full cursor-pointer space-y-1 border-b-2 border-green-600/30 bg-gradient-to-r from-green-700/10 px-5 py-4 duration-200 hover:bg-gray-100">
            <span className="text-sm font-semibold text-green-700 ">
              {data?.systemHealth.systemName} - {data?.systemHealth.version}
            </span>
            <h4 className="text-lg font-medium text-gray-900 duration-200 group-hover:underline">
              {data?.systemHealth.systemName}
            </h4>
            <p className="font-medium text-green-700 duration-200">
              {data?.systemHealth.uptime} - {data?.systemHealth.lastChecked}
            </p>
          </div>
        </Container>
      </div>
    </>
  );
}

const Header = ({ title }: { title: string }) => {
  return (
    <div className="sticky top-0 w-full bg-gray-200 px-5 py-3 text-sm font-bold uppercase text-gray-700">
      {title}
    </div>
  );
};

const Container = ({ children }: { children: any }) => {
  return (
    <div className="relative h-96 w-full overflow-y-auto overflow-x-hidden border border-solid border-gray-200 bg-white">
      {children}
    </div>
  );
};

const NewsCard = ({
  date,
  title,
  desc,
}: {
  date: string;
  title: string;
  desc: string;
}) => {
  return (
    <div className="animate group w-full cursor-pointer space-y-1 border-b px-5 py-4 duration-200 hover:bg-gray-100">
      <span className="text-sm font-semibold text-primary ">{date}</span>
      <h4 className="text-lg font-medium text-gray-900 duration-200 group-hover:underline">
        {title}
      </h4>
      <p className="font-medium duration-200 group-hover:text-gray-800">
        {desc}
      </p>
    </div>
  );
};

const AssetStatus = ({ title, status }: { title: string; status: string }) => {
  return (
    <div className="animate group flex w-full cursor-pointer items-center justify-between space-y-1 border-b px-5 py-4 duration-200 hover:bg-gray-100">
      <div className="flex items-center gap-3">
        {title == "Windows" ? (
          <svg
            width="18"
            height="20"
            viewBox="0 0 18 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clip-path="url(#clip0_1605_11729)">
              <path
                d="M0.5 4.00886L7.27742 3.07493V9.62349H0.5V4.00886ZM0.5 15.9912L7.27742 16.9251V10.4577H0.5V15.9912ZM8.02309 17.0248L17.0375 18.2688V10.4577H8.02309V17.0248ZM8.02309 2.97527V9.62349H17.0375V1.73126L8.02309 2.97527Z"
                fill="#743A8E"
              />
            </g>
            <defs>
              <clipPath id="clip0_1605_11729">
                <rect
                  width="16.5375"
                  height="18.9"
                  fill="white"
                  transform="translate(0.5 0.549988)"
                />
              </clipPath>
            </defs>
          </svg>
        ) : title == "Linux" ? (
          <svg
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M17.5887 16.0583C17.0022 15.8181 16.7513 15.4994 16.7755 15.0238C16.8005 14.4686 16.4856 14.062 16.336 13.9013C16.4264 13.5562 16.6904 12.362 16.3363 11.3249C15.9557 10.2147 14.7937 8.51914 13.5947 6.85244C13.1039 6.16798 13.0807 5.42397 13.0539 4.56246C13.0282 3.74075 12.9992 2.80933 12.541 1.77391C12.0427 0.646496 11.043 0 9.79793 0C9.05727 0 8.297 0.231477 7.71195 0.635021C6.51391 1.46185 6.67227 3.26455 6.77706 4.45741C6.79142 4.62075 6.80492 4.77505 6.81279 4.90679C6.88256 6.07506 6.81909 6.6908 6.73607 6.87795C6.68237 7.00024 6.41797 7.34831 6.13817 7.71684C5.84879 8.09796 5.52072 8.52996 5.2518 8.93252C4.93094 9.41692 4.67193 10.1573 4.42143 10.8733C4.23815 11.3973 4.06504 11.8921 3.89651 12.1879C3.5771 12.7568 3.65658 13.2873 3.72294 13.5325C3.60202 13.6165 3.42733 13.7819 3.27985 14.0936C3.10162 14.4739 2.73998 14.6783 1.98797 14.8229C1.6424 14.8936 1.4041 15.0389 1.27951 15.2548C1.0982 15.569 1.19695 15.9637 1.28705 16.2335C1.42017 16.6301 1.33722 16.8811 1.1864 17.3368C1.15164 17.442 1.11223 17.5611 1.0723 17.6924C1.00941 17.8997 1.0321 18.0882 1.13958 18.2526C1.42358 18.6867 2.2523 18.8399 3.10542 18.9406C3.6148 19.001 4.17232 19.2048 4.71153 19.4019C5.23986 19.595 5.78616 19.7946 6.28276 19.8552C6.35823 19.8647 6.43299 19.8695 6.50505 19.8695C7.25483 19.8695 7.59359 19.372 7.701 19.1676C7.97031 19.1127 8.89917 18.9367 9.85649 18.913C10.8123 18.8858 11.7371 19.0745 11.9991 19.1332C12.0814 19.2908 12.2985 19.6509 12.6446 19.8364C12.8349 19.9404 13.0996 20 13.3707 20H13.3708C13.6604 20 14.2113 19.9315 14.6473 19.4729C15.0822 19.012 16.1687 18.4237 16.9622 17.9941C17.1392 17.8982 17.3049 17.8085 17.4501 17.7275C17.8958 17.4804 18.139 17.1274 18.1173 16.7589C18.0992 16.4529 17.8967 16.1844 17.5887 16.0583ZM7.72172 15.9696C7.66624 15.5788 7.16348 15.1912 6.58125 14.7424C6.10518 14.3754 5.56557 13.9594 5.41692 13.6072C5.1097 12.8805 5.35187 11.6027 5.7741 10.9447C5.98275 10.6153 6.15318 10.1157 6.31804 9.63252C6.496 9.11081 6.68007 8.5714 6.88591 8.33527C7.21188 7.96661 7.51313 7.24929 7.5665 6.68398C7.87175 6.97539 8.34526 7.34516 8.78271 7.34516C8.85005 7.34516 8.91543 7.33638 8.97792 7.31874C9.2772 7.23231 9.7174 6.97795 10.1431 6.73204C10.5101 6.51998 10.9627 6.25847 11.133 6.23466C11.425 6.65395 13.1218 10.4088 13.2951 11.6146C13.4323 12.5687 13.2874 13.3575 13.2145 13.6664C13.1559 13.6584 13.086 13.6519 13.0126 13.6519C12.54 13.6519 12.4149 13.9099 12.3823 14.0639C12.2985 14.4641 12.2896 15.7438 12.2887 16.0313C12.1178 16.2484 11.2536 17.2709 10.0129 17.4547C9.5075 17.5281 9.03556 17.5654 8.61025 17.5654C8.2467 17.5654 8.0147 17.5373 7.91837 17.5227L7.29489 16.8093C7.54073 16.6879 7.7865 16.4318 7.72172 15.9696ZM8.51287 4.20652C8.49339 4.21491 8.47425 4.2239 8.45543 4.23347C8.45353 4.19124 8.44913 4.14842 8.44238 4.10547C8.37431 3.71366 8.11451 3.42927 7.82473 3.42927C7.80329 3.42927 7.78172 3.43091 7.75805 3.43451C7.58565 3.46324 7.45044 3.59275 7.37634 3.77635C7.44132 3.37347 7.66959 3.07517 7.94041 3.07517C8.25844 3.07517 8.5271 3.50376 8.5271 4.01104C8.5271 4.07498 8.52244 4.13859 8.51287 4.20652ZM10.9841 4.50862C11.0132 4.4159 11.029 4.31557 11.029 4.21144C11.029 3.7515 10.7371 3.39117 10.3646 3.39117C10.0006 3.39117 9.70435 3.75911 9.70435 4.21144C9.70435 4.24226 9.70586 4.27314 9.70875 4.30396C9.68947 4.29655 9.67065 4.28934 9.65229 4.28239C9.61039 4.1555 9.58921 4.02311 9.58921 3.88796C9.58921 3.33799 9.94068 2.89051 10.3728 2.89051C10.8049 2.89051 11.1564 3.33799 11.1564 3.88796C11.1564 4.11675 11.0933 4.33511 10.9841 4.50862ZM10.6655 5.57905C10.6592 5.60686 10.646 5.61918 10.4995 5.69538C10.4255 5.73387 10.3335 5.78181 10.2183 5.85197L10.1413 5.8986C9.8319 6.08614 9.1075 6.52542 8.91084 6.55119C8.77727 6.56916 8.69464 6.51735 8.50887 6.39112C8.46697 6.3626 8.42238 6.3323 8.37484 6.30181C8.03995 6.08207 7.82454 5.84004 7.80021 5.74542C7.90939 5.66102 8.18002 5.44981 8.31857 5.32476C8.59982 5.06325 8.88284 4.88751 9.02291 4.88751C9.03032 4.88751 9.037 4.88803 9.04396 4.88934C9.20855 4.91839 9.61452 5.08043 9.91104 5.19872C10.0481 5.25341 10.1665 5.30063 10.2497 5.33053C10.5121 5.42063 10.6489 5.53591 10.6655 5.57905ZM13.0227 17.8001C13.1707 17.1325 13.3412 16.2243 13.3136 15.6889C13.3072 15.5673 13.2964 15.4349 13.286 15.3069C13.2665 15.0675 13.2376 14.7118 13.2675 14.6063C13.2734 14.6035 13.2799 14.6011 13.2872 14.5991C13.2884 14.9052 13.3549 15.5158 13.8432 15.7287C13.9887 15.7922 14.155 15.8243 14.3374 15.8243C14.8266 15.8243 15.3692 15.5844 15.5915 15.3621C15.7224 15.2312 15.8325 15.0711 15.9096 14.9442C15.9265 14.9936 15.9369 15.0581 15.9314 15.1413C15.9024 15.5928 16.1218 16.1917 16.5394 16.4124L16.6001 16.4444C16.7489 16.5224 17.1439 16.7298 17.1502 16.8282C17.1502 16.8282 17.1469 16.8398 17.1249 16.8602C17.0259 16.9507 16.6776 17.1285 16.3409 17.3005C15.7434 17.6056 15.0662 17.9513 14.7621 18.2712C14.3339 18.7218 13.8496 19.0245 13.5571 19.0245C13.5219 19.0245 13.4898 19.0201 13.4613 19.011C13.1437 18.912 12.8822 18.4537 13.0227 17.8001ZM2.19565 16.097C2.16325 15.9454 2.13768 15.8257 2.16516 15.7097C2.18509 15.6238 2.60916 15.5318 2.79027 15.4925C3.0449 15.4372 3.30825 15.3801 3.48044 15.2756C3.7133 15.1345 3.8394 14.8744 3.95061 14.6449C4.03114 14.4789 4.11428 14.3073 4.21323 14.251C4.21881 14.2477 4.22733 14.2439 4.2436 14.2439C4.42897 14.2439 4.81796 14.6336 5.04209 14.9824C5.09895 15.0703 5.20426 15.2465 5.32609 15.4505C5.69049 16.0602 6.18944 16.8953 6.45004 17.1752C6.68486 17.4268 7.06499 17.9105 6.97148 18.3254C6.90302 18.6473 6.53856 18.9091 6.45259 18.967C6.42138 18.9741 6.38276 18.9777 6.33732 18.9777C5.83856 18.9777 4.85127 18.5627 4.32084 18.3398L4.24235 18.3068C3.94615 18.1826 3.46261 18.1044 2.995 18.0287C2.62293 17.9684 2.11342 17.886 2.02896 17.8115C1.9605 17.7347 2.03991 17.4851 2.10994 17.2648C2.16037 17.1065 2.21244 16.9429 2.24096 16.7715C2.28142 16.4982 2.23381 16.2757 2.19565 16.097Z"
              fill="#743A8E"
            />
          </svg>
        ) : null}

        <h4 className="text-lg font-medium text-gray-900 duration-200 group-hover:underline">
          {title}
        </h4>
      </div>
      <span className="text-sm font-semibold text-primary ">{status}</span>
    </div>
  );
};
